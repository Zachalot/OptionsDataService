// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OptionsDataService.Infrastructure;

namespace OptionsDataService.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("OptionsDataService.Models.Equity", b =>
                {
                    b.Property<int>("EquityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Ask")
                        .HasColumnType("real");

                    b.Property<int>("AskSize")
                        .HasColumnType("int");

                    b.Property<float>("Bid")
                        .HasColumnType("real");

                    b.Property<int>("BidSize")
                        .HasColumnType("int");

                    b.Property<float>("Close")
                        .HasColumnType("real");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("High52Wk")
                        .HasColumnType("real");

                    b.Property<float>("HighPrice")
                        .HasColumnType("real");

                    b.Property<float>("Last")
                        .HasColumnType("real");

                    b.Property<float>("Low52Wk")
                        .HasColumnType("real");

                    b.Property<float>("LowPrice")
                        .HasColumnType("real");

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.Property<float>("OpenPrice")
                        .HasColumnType("real");

                    b.Property<DateTime>("QuoteTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalVolume")
                        .HasColumnType("int");

                    b.HasKey("EquityId");

                    b.ToTable("Equities");
                });

            modelBuilder.Entity("OptionsDataService.Models.Option", b =>
                {
                    b.Property<int>("OptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<float>("Ask")
                        .HasColumnType("real");

                    b.Property<int>("AskSize")
                        .HasColumnType("int");

                    b.Property<float>("Bid")
                        .HasColumnType("real");

                    b.Property<int>("BidSize")
                        .HasColumnType("int");

                    b.Property<float>("ClosePrice")
                        .HasColumnType("real");

                    b.Property<string>("ContractType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Delta")
                        .HasColumnType("real");

                    b.Property<int>("Dte")
                        .HasColumnType("int");

                    b.Property<DateTime>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<float>("Gamma")
                        .HasColumnType("real");

                    b.Property<float>("HighPrice")
                        .HasColumnType("real");

                    b.Property<bool>("Itm")
                        .HasColumnType("bit");

                    b.Property<float>("LowPrice")
                        .HasColumnType("real");

                    b.Property<float>("Mark")
                        .HasColumnType("real");

                    b.Property<float>("MarkUnderlying")
                        .HasColumnType("real");

                    b.Property<int>("OpenInterest")
                        .HasColumnType("int");

                    b.Property<float>("OpenPrice")
                        .HasColumnType("real");

                    b.Property<int>("OptionableEquityId")
                        .HasColumnType("int");

                    b.Property<float>("PercentChange")
                        .HasColumnType("real");

                    b.Property<DateTime>("QuoteTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("QuoteTimeUnderlying")
                        .HasColumnType("datetime2");

                    b.Property<float>("Rho")
                        .HasColumnType("real");

                    b.Property<int>("Strike")
                        .HasColumnType("int");

                    b.Property<string>("SymbolUnderlying")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TheoValue")
                        .HasColumnType("real");

                    b.Property<int>("TheoVolatility")
                        .HasColumnType("int");

                    b.Property<float>("Theta")
                        .HasColumnType("real");

                    b.Property<int>("TotalVolume")
                        .HasColumnType("int");

                    b.Property<float>("Vega")
                        .HasColumnType("real");

                    b.Property<float>("Volatility")
                        .HasColumnType("real");

                    b.HasKey("OptionId");

                    b.ToTable("Options");
                });
#pragma warning restore 612, 618
        }
    }
}
